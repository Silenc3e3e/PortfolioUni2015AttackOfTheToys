using UnityEngine;
using System.Collections;

public class InGamePauseMenu : MonoBehaviour {
	
	public GameObject Main;
	public GameObject Options;
	public GameObject Load;
	public GameObject DeathMenu;
	public GameObject[] HUDs;
	public string MainMenuName;
	public GameObject PrefabLoading;

	void Start(){
		bool NotFoundPlayerHUD=true;
		foreach (GameObject current in HUDs){
			if(current!=null){
				if(current.tag=="CanvasHUD"){
					NotFoundPlayerHUD=false;
					break;
				}
			}
		}
		if(NotFoundPlayerHUD){
			int count=0;
			foreach (GameObject current in HUDs){
				if(current==null){
					HUDs[count]=GameObject.FindGameObjectWithTag("CanvasHUD");
					break;
				}
				count++;
			}
		}
	}

	public void toMenu(){
		Main.SetActive (true);
		Options.SetActive (false);
		Load.SetActive (false);
		foreach (GameObject current in HUDs){
			if(current!=null)
				current.SetActive (false);
		}
		Time.timeScale=0f;
	}
	public void toOptions(){
		Main.SetActive (false);
		Options.SetActive (true);
		Load.SetActive (false);
		foreach (GameObject current in HUDs){
			if(current!=null)
				current.SetActive (false);
		}
		Time.timeScale=0f;
	}
	public void toLoadGame(){
		Main.SetActive (false);
		Options.SetActive (false);
		Load.SetActive (true);
		foreach (GameObject current in HUDs){
			if(current!=null)
				current.SetActive (false);
		}
		Time.timeScale=0f;
		StartCoroutine ("LoadALevel","Levels");
	}
	public void CloseAll(){
		Main.SetActive (false);
		Options.SetActive (false);
		Load.SetActive (false);
		foreach (GameObject current in HUDs){
			if(current!=null)
				current.SetActive (true);
		}
		Time.timeScale=1f;
	}
	public void GoToMainMenu(){
		Time.timeScale=1f;
		Application.Quit();
		#if UNITY_EDITOR
			UnityEditor.EditorApplication.isPlaying = false;
		#endif
		//Application.LoadLevel (MainMenuName);
	}
	public void DeathMenuActive(){
		Time.timeScale=1f;
		CloseAll();
		DeathMenu.SetActive(true);
	}
	public void ReloadLevel(){
		Time.timeScale=1f;
		GameObject spawnedPrefab = (GameObject)Instantiate(PrefabLoading,new Vector3(0,0,0),Quaternion.identity);
		LoadNextScene LNSScript = spawnedPrefab.GetComponent<LoadNextScene> ();
		if (LNSScript != null)
			LNSScript.LoadLevel (Application.loadedLevelName);
		else {
			StartCoroutine ("LoadALevel",Application.loadedLevelName);
		}
	}
}
